from PySide6.QtWidgets import QDockWidget, QColorDialog
from PySide6.QtGui import QColor, QIcon
from ui_settings_draw import Ui_DockWidget

class DrawingTools(QDockWidget, Ui_DockWidget):
    """–ü–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∏—Å–æ–≤–∞–Ω–∏—è"""

    def __init__(self, parent=None, pen_button=None):
        super().__init__(parent)
        self.setupUi(self)
        self.scene = None  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ü–µ–Ω—É
        self.pen_button = pen_button  # ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ `pen`

        self.pushButton_30.clicked.connect(lambda: self.set_drawing_mode("free"))
        self.pushButton_21.clicked.connect(lambda: self.set_drawing_mode("circle"))
        self.pushButton_27.clicked.connect(lambda: self.set_drawing_mode("square"))
        self.colour_2.clicked.connect(lambda: self.set_drawing_mode("line"))
        self.colour_3.clicked.connect(self.choose_color)

        self.horizontalSlider.valueChanged.connect(self.change_pen_size)
        self.horizontalSlider_2.valueChanged.connect(self.change_pen_opacity)



    def set_scene(self, scene):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ü–µ–Ω—É"""
        self.scene = scene

    def set_drawing_mode(self, mode):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º —Ä–∏—Å–æ–≤–∞–Ω–∏—è"""
        if self.scene:
            self.scene.set_drawing_mode(mode)

    def change_pen_size(self, value):
        """–ú–µ–Ω—è–µ—Ç —Ç–æ–ª—â–∏–Ω—É –∫–∏—Å—Ç–∏"""
        if self.scene:
            self.scene.set_pen_width(value)

    def change_pen_opacity(self, value):
        """–ú–µ–Ω—è–µ—Ç –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∫–∏—Å—Ç–∏"""
        if self.scene:
            self.scene.set_pen_opacity(value)

    def choose_color(self):
        """–í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ –∫–∏—Å—Ç–∏"""
        color = QColorDialog.getColor()
        if color.isValid() and self.scene:
            self.scene.set_pen_color(color)

    def update_pen_button(self):
        """–ú–µ–Ω—è–µ—Ç –∏–∫–æ–Ω–∫—É –∏ —Ü–≤–µ—Ç –∫–Ω–æ–ø–∫–∏ 'pen' –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ –∏ —Ü–≤–µ—Ç–∞"""
        if not self.pen_button:  # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
            return

        icons = {
            "free": "icons/attribution-pencil.svg",
            "circle": "icons/circle.svg",
            "square": "icons/stop.svg",
            "line": "icons/algorithm.svg",

        }

        if self.scene:
            # ‚úÖ –ú–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
            icon_path = icons.get(self.scene.shape_mode, "icons/attribution-pencil.svg")  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –∫–∞—Ä–∞–Ω–¥–∞—à
            self.pen_button.setIcon(QIcon(icon_path))

            # ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç –∫–Ω–æ–ø–∫–∏ (—Å —É—á–µ—Ç–æ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏)
            color = self.scene.pen_color
            rgba_color = f"rgba({color.red()}, {color.green()}, {color.blue()}, {color.alpha()})"
            self.pen_button.setStyleSheet(f"background-color: {rgba_color}; border-radius: 5px;")

    def set_drawing_mode(self, mode):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º —Ä–∏—Å–æ–≤–∞–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É 'pen'"""
        if self.scene:
            self.scene.set_drawing_mode(mode)
            self.update_pen_button()  # üî• –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É

    def change_pen_size(self, value):
        """–ú–µ–Ω—è–µ—Ç —Ç–æ–ª—â–∏–Ω—É –∫–∏—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É 'pen'"""
        if self.scene:
            self.scene.set_pen_width(value)
            self.update_pen_button()  # üî• –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É

    def change_pen_opacity(self, value):
        """–ú–µ–Ω—è–µ—Ç –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∫–∏—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É 'pen'"""
        if self.scene:
            self.scene.set_pen_opacity(value)
            self.update_pen_button()  # üî• –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É

    def choose_color(self):
        """–í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ –∫–∏—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ 'pen'"""
        color = QColorDialog.getColor()
        if color.isValid() and self.scene:
            self.scene.set_pen_color(color)
            self.update_pen_button()  # üî• –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É










